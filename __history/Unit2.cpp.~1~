#pragma hdrstop

#pragma package(smart_init)

#define _WINSOCK_DEPRECATED_NO_WARNINGS

#include <iostream>
#include <string>
#include <winsock2.h>

#pragma comment(lib, "ws2_32.lib")
#include "ClientHandler.h"

 void ClientHandler::serverListener()
 {
	int buffSize;
	while (true)
	{
        recv(connection, (char*)&buffSize, sizeof(int), NULL);
        char* buffer = new char[buffSize + 1];
        buffer[buffSize] = '\0';
        recv(connection, buffer, buffSize, NULL);
        std::cout << buffer << std::endl;
        delete[] buffer;
	}
 }
void ClientHandler::createListenerThread()
{
	CreateThread(NULL, NULL, (LPTHREAD_START_ROUTINE)serverListener, NULL, NULL, NULL);
}

void ClientHandler::sendToAllMessage(std::string clientBuffer)
{
	int bufferSize = clientBuffer.size();
	send(connection, (char*)&bufferSize, sizeof(int), NULL);
	send(connection, clientBuffer.c_str(), bufferSize, NULL);
}

bool ClientHandler::connect(){
	SOCKADDR_IN servAddr;
	servAddr.sin_addr.s_addr = inet_addr("127.0.0.1");
	servAddr.sin_port = htons(1212);
	servAddr.sin_family = AF_INET;

	connection = socket(AF_INET, SOCK_STREAM, NULL);

	//if (connect(connection, (SOCKADDR*)&servAddr, sizeof(servAddr)) != 0)
		return false;
	return true;
}
